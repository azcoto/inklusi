import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { Box, Text, Container, Grid, Button, ScrollArea, TextInput, NumberInput, NativeSelect, Divider, Switch, } from '@mantine/core';
import { DatePicker } from '@mantine/dates';
import dayjs from 'dayjs';
import { useState } from 'react';
import z from 'zod';
const zSimulasiForm = z.object({
    nama: z.string(),
    tgLahir: z.string(),
});
const Calc = () => {
    const [takeOver, setTakeOver] = useState(false);
    const [tgLahir, setTgLahir] = useState(null);
    const toggleTakeOver = () => {
        setTakeOver(!takeOver);
    };
    return (_jsxs(Container, { size: "xs", children: [_jsx(Text, { weight: 'bold', align: "center", children: "SIMULASI PERHITUNGAN KREDIT" }), _jsx(ScrollArea, { offsetScrollbars: true, style: { height: '75vh' }, mt: 10, scrollbarSize: 2, sx: { div: { div: { paddingRight: '3px' } } }, children: _jsxs(Grid, { gutter: 'xs', align: "flex-end", children: [_jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Sales Officer" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Team Leader" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 12, children: _jsx(Divider, { my: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Nama Calon Debitur" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(TextInput, { size: "xs" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Tanggal Lahir" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(DatePicker, { value: tgLahir, onChange: setTgLahir, sx: { div: { div: { paddingRight: 0 } } }, minDate: dayjs(new Date()).subtract(79, 'y').toDate(), maxDate: dayjs(new Date()).subtract(20, 'y').toDate(), locale: "id", inputFormat: "DD MMMM YYYY", size: "xs" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Kantor Bayar Asal" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(TextInput, { size: "xs" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Take Over" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(Switch, { label: takeOver ? 'Ya' : 'Tidak', checked: takeOver, onChange: () => toggleTakeOver() }) }), takeOver && (_jsxs(_Fragment, { children: [_jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Pelunasan" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(NumberInput, { sx: { input: { textAlign: 'right' } }, hideControls: true, size: "xs" }) })] })), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Produk" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(NativeSelect, { data: ['PENSIUNAN', 'PNS AKTIF'], size: "xs" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Jangka Waktu" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(NativeSelect, { data: [...Array(15).keys()].map((x) => String((x + 1) * 12)), rightSection: _jsx(Text, { size: "xs", mr: 20, children: "Bulan" }), size: "xs" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Gaji" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(NumberInput, { sx: { input: { textAlign: 'right' } }, hideControls: true, size: "xs" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Plafond" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(NumberInput, { sx: { input: { textAlign: 'right' } }, hideControls: true, size: "xs" }) }), _jsx(Grid.Col, { span: 12, children: _jsx(Divider, { my: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Bunga" }) }), _jsx(Grid.Col, { span: 7, children: _jsx(TextInput, { readOnly: true, sx: { input: { textAlign: 'right' } }, value: "12 %", variant: "unstyled", size: "xs" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Angsuran" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 12, children: _jsx(Divider, { my: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Asuransi" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Provisi" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Administrasi" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Total Blokir" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Total Biaya" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Terima Bersih" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) }), _jsx(Grid.Col, { span: 5, children: _jsx(Text, { size: "sm", children: "Total Penerimaan" }) }), _jsxs(Grid.Col, { span: 5, children: [_jsx(Text, { size: "sm" }), "1"] }), _jsx(Grid.Col, { span: 2, children: _jsx(Text, { size: "sm" }) })] }) }), _jsxs(Box, { sx: {
                    position: 'fixed',
                    bottom: 0,
                    left: 0,
                    right: 0,
                    display: 'flex',
                    gap: '10px',
                }, mb: 8, px: 8, children: [_jsx(Button, { sx: { flexGrow: 1 }, children: "Reset" }), _jsx(Button, { sx: { flexGrow: 1 }, children: "Simulasi" })] })] }));
};
export default Calc;
